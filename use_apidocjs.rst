:Date: 03/18/2016

使用apidocjs来生成文档
=======================

实习的时候负责了一段时间移动端API，很喜欢这种工作，但是当时遇到一个比较烦的
事情就是文档，因为历史遗留原因，文档都是在 ``doc/README.md`` 里，倒不是因为
markdown的问题，而是，写好一个函数，往往会在controller里写好需要哪些参数，
这样也方便后续维护人员看懂(虽然还有一种说法是，controller一般没有那么强的
逻辑性，就不用写文档了，但我觉得还是写一写比较好)，但是问题就在于，函数文档里
写了一遍，给移动端的文档里又要写一遍，不可能要别人去每个controller里看吧。

今天俺来介绍一个根据代码文档生成API文档的工具: `apidocjs <http://apidocjs.com/>`__
这种工具一般都有两类，一类是独立在代码之外，比如 ``swagger`` ，用一个单独的文件
保存文档，还一种是嵌在代码文档里，比如 ``apidocjs`` 。我个人倾向于用后面这种，
因为写一份文档可以同时方便API维护者和API使用者(虽然swagger这种也可以，但还是麻烦)。

安装 && 执行
===============

apidocjs是js写的，安装::

    npm install -g apidocjs

``apidocjs`` 工作原理是执行的时候，扫描指定目录下所有代码，然后从文档里抽取，然后
生成文档。它支持很多种语言的文档，包括不限于 Java, JS, PHP, Python等等。

它会优先读取指定目录下的 ``apidoc.json`` ，然后是 ``package.json`` 。下面是常用配置参数表:

+--------------+--------------------+
|    参数名    |    描述            |
+--------------+--------------------+
|    name      |  项目名称          |
+--------------+--------------------+
|   version    | 项目版本，如 0.0.1 |
+--------------+--------------------+
|  description | 项目描述           |
+--------------+--------------------+
|    title     | 浏览器标题         |
+--------------+--------------------+
|     url      | 放在URI前的URL     |
+--------------+--------------------+

生成文档的时候执行::

    apidoc

即可，默认为当前目录，也可以通过参数改，具体参数请自行 ``apidoc -h`` 查看。

doc 参数
=========

例如 ``@apiParam``::

    @apiParam [(group)] [{type}] [field=defaultValue] [description]

其中的名字，如果你想标为可选参数，就用 ``[name]`` 这样。

我想了想，其他的还是自己去看这里吧::

    http://apidocjs.com/#params

哈哈哈哈, 最后上一张我的测试图~

.. image:: http://7xq4lh.com1.z0.glb.clouddn.com/QQ%E6%88%AA%E5%9B%BE20160318154554.png
